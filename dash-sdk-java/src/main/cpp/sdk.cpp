/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1,
  SWIG_JavaIOException,
  SWIG_JavaRuntimeException,
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError,
  SWIG_JavaIllegalStateException,
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { SWIG_JavaIllegalStateException, "java/lang/IllegalStateException" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


//extern "C" {
#include "../../../../rs-sdk/target/rs_sdk_bindings.h"
//}
#include <stdlib.h>
#include "dpp.h"
#include "conversions.h"
#include <ctime>

MemoryFactory * MemoryFactory::instance = new MemoryFactory();
MemoryFactory & memoryFactory = *MemoryFactory::getInstance();


#include <stdint.h>		// Use the C99 official header

SWIGINTERN rs_sdk_platform_types_identity_PublicKeyHash *new_rs_sdk_platform_types_identity_PublicKeyHash(uint8_t (*value)[20]){
        return rs_sdk_platform_types_identity_PublicKeyHash_ctor(value);
    }
SWIGINTERN void delete_rs_sdk_platform_types_identity_PublicKeyHash(rs_sdk_platform_types_identity_PublicKeyHash *self){
         rs_sdk_platform_types_identity_PublicKeyHash_destroy(self);
     }
SWIGINTERN platform_value_types_binary_data_BinaryData *new_platform_value_types_binary_data_BinaryData(Vec_u8 *o_0){
        printf("BinaryData(%lx)\n", (uint64_t)o_0);
        return platform_value_types_binary_data_BinaryData_ctor(o_0);
    }
SWIGINTERN void delete_platform_value_types_binary_data_BinaryData(platform_value_types_binary_data_BinaryData *self){
        printf("~BinaryData(%lx)\n", (uint64_t)self);
        printf("~BinaryData->_0(%lx)\n", (uint64_t)self->_0);

        uint8_t * ptr = self->_0->values;
        // memoryFactory.destroyItem(self->_0->values); // causes BinaryData_destroy crash
        printf("~BinaryData->_0->values(%lx), [0] = %d\n", (uint64_t)self->_0->values, (int)ptr[0]);

        // Vec_u8_destroy(self->_0); // crash
        printf("~BinaryData->_0(%lx)\n", (uint64_t)self->_0);
        platform_value_types_binary_data_BinaryData_destroy(self);
        //printf("~BinaryData complete(%lx)\n", (uint64_t)self);
        //printf("~BinaryData->_0->values[0] = %d\n", (int)ptr[0]);

        //memoryFactory.destroyItem(ptr);
    }
SWIGINTERN platform_value_types_identifier_IdentifierBytes32 *new_platform_value_types_identifier_IdentifierBytes32(uint8_t (*identifierBytes)[32]){
        return platform_value_types_identifier_IdentifierBytes32_ctor(identifierBytes);
    }
SWIGINTERN void delete_platform_value_types_identifier_IdentifierBytes32(platform_value_types_identifier_IdentifierBytes32 *self){
        printf("~IdentityBytes32(%lx)\n", (uint64_t)self);
        // memoryFactory.destroyItem(self->_0); // crash
        platform_value_types_identifier_IdentifierBytes32_destroy(self);
    }
SWIGINTERN platform_value_types_identifier_Identifier *new_platform_value_types_identifier_Identifier(uint8_t (*byteArray)[32]){
        platform_value_types_identifier_IdentifierBytes32 * identifierBytes32 = platform_value_types_identifier_IdentifierBytes32_ctor(byteArray);
        return platform_value_types_identifier_Identifier_ctor(identifierBytes32);
    }
SWIGINTERN void delete_platform_value_types_identifier_Identifier(platform_value_types_identifier_Identifier *self){
        printf("~Identifier(%lx)\n", self);
        //memoryFactory.destroyItem(self->_0->_0); //crash
        platform_value_types_identifier_Identifier_destroy(self);
    }
SWIGINTERN dpp_identity_identity_public_key_KeyID *new_dpp_identity_identity_public_key_KeyID(int id){
        return dpp_identity_identity_public_key_KeyID_ctor(id);
    }
SWIGINTERN void delete_dpp_identity_identity_public_key_KeyID(dpp_identity_identity_public_key_KeyID *self){
        dpp_identity_identity_public_key_KeyID_destroy(self);
    }
SWIGINTERN int dpp_identity_identity_public_key_KeyID_toInt(dpp_identity_identity_public_key_KeyID *self){
        return self->_0;
    }
SWIGINTERN bool dpp_identity_identity_public_key_KeyID_objectEquals(dpp_identity_identity_public_key_KeyID *self,dpp_identity_identity_public_key_KeyID *other){
        if (self == other) return true;
        if (self == nullptr || other == nullptr) return false;
        return self->_0 == other->_0;
    }
SWIGINTERN dpp_identity_identity_public_key_contract_bounds_ContractBounds *new_dpp_identity_identity_public_key_contract_bounds_ContractBounds__SWIG_0(platform_value_types_identifier_Identifier *id){
        dpp_identity_identity_public_key_contract_bounds_ContractBounds * cb = dpp_identity_identity_public_key_contract_bounds_ContractBounds_SingleContract_ctor(Identifier_clone(id));
        printf("ContractBounds: %lx->%lx\n", (unsigned long)cb, cb->single_contract.id);
        return cb;
    }
SWIGINTERN dpp_identity_identity_public_key_contract_bounds_ContractBounds *new_dpp_identity_identity_public_key_contract_bounds_ContractBounds__SWIG_1(platform_value_types_identifier_Identifier *id,char *document_type){
        return dpp_identity_identity_public_key_contract_bounds_ContractBounds_SingleContractDocumentType_ctor(Identifier_clone(id), memoryFactory.clone(document_type));
    }
SWIGINTERN void delete_dpp_identity_identity_public_key_contract_bounds_ContractBounds(dpp_identity_identity_public_key_contract_bounds_ContractBounds *self){
        printf("~ContractBounds: %lx->%lx\n", (unsigned long)self, self->single_contract.id);
        dpp_identity_identity_public_key_contract_bounds_ContractBounds_destroy(self);
    }
SWIGINTERN dpp_identity_identity_public_key_TimestampMillis *new_dpp_identity_identity_public_key_TimestampMillis__SWIG_0(){
        return dpp_identity_identity_public_key_TimestampMillis_ctor(time(NULL) * 1000);
    }
SWIGINTERN dpp_identity_identity_public_key_TimestampMillis *new_dpp_identity_identity_public_key_TimestampMillis__SWIG_1(long long timestamp){
        return dpp_identity_identity_public_key_TimestampMillis_ctor(timestamp);
    }
SWIGINTERN void delete_dpp_identity_identity_public_key_TimestampMillis(dpp_identity_identity_public_key_TimestampMillis *self){
        dpp_identity_identity_public_key_TimestampMillis_destroy(self);
    }
SWIGINTERN long long dpp_identity_identity_public_key_TimestampMillis_toLong(dpp_identity_identity_public_key_TimestampMillis *self){
        return self ? self->_0 : -1;
    }
SWIGINTERN bool dpp_identity_identity_public_key_TimestampMillis_objectEquals(dpp_identity_identity_public_key_TimestampMillis *self,dpp_identity_identity_public_key_TimestampMillis *other){
        if (self == other) return true;
        if (self == nullptr || other == nullptr) return false;
        return self->_0 == other->_0;
    }
SWIGINTERN dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *new_dpp_identity_identity_public_key_v0_IdentityPublicKeyV0(dpp_identity_identity_public_key_KeyID *keyId,dpp_identity_identity_public_key_purpose_Purpose purpose,dpp_identity_identity_public_key_security_level_SecurityLevel securityLevel,dpp_identity_identity_public_key_contract_bounds_ContractBounds *contract_bounds,dpp_identity_identity_public_key_key_type_KeyType key_type,bool read_only,platform_value_types_binary_data_BinaryData *data,dpp_identity_identity_public_key_TimestampMillis *disabled_at){

        // enums
        dpp_identity_identity_public_key_purpose_Purpose * purposeObject = intToPurpose(purpose);
        dpp_identity_identity_public_key_key_type_KeyType * keyTypeObject = intToKeyType(key_type);
        dpp_identity_identity_public_key_security_level_SecurityLevel * securityLevelObject = intToSecurityLevel(securityLevel);

        uint8_t * byteArray = (uint8_t*)memoryFactory.alloc(data->_0->count);
        memcpy(byteArray, data->_0->values, data->_0->count);
        Vec_u8 * vec_u8 = Vec_u8_ctor(data->_0->count, byteArray);
        platform_value_types_binary_data_BinaryData * binaryData = platform_value_types_binary_data_BinaryData_ctor(vec_u8);
        printf("  ->data(%lx)\n", (long)binaryData);
        printf("  ->data->_0(%lx)\n", (long)binaryData->_0);
        printf("  ->data->_0->values(%lx)\n", (long)binaryData->_0->values);
        dpp_identity_identity_public_key_contract_bounds_ContractBounds * contract_bounds_copy = nullptr;
        if (contract_bounds != nullptr) {
            if (contract_bounds->tag == dpp_identity_identity_public_key_contract_bounds_ContractBounds::Tag::SingleContract) {
                contract_bounds_copy = dpp_identity_identity_public_key_contract_bounds_ContractBounds_SingleContract_ctor(Identifier_clone(contract_bounds->single_contract.id));
            } else if (contract_bounds->tag == dpp_identity_identity_public_key_contract_bounds_ContractBounds::Tag::SingleContractDocumentType) {
                char * typeCopy = memoryFactory.clone(contract_bounds->single_contract_document_type.document_type_name);
                contract_bounds_copy = dpp_identity_identity_public_key_contract_bounds_ContractBounds_SingleContractDocumentType_ctor(Identifier_clone(contract_bounds->single_contract_document_type.id), typeCopy);
            }
        }
        //printf("  ->contract_bounds(%lx): %d\n", (long)contract_bounds, contract_bounds != nullptr ? contract_bounds->tag : -1);
        printf("  ->contract_bounds_copy(%lx)\n", (long)contract_bounds_copy);
        dpp_identity_identity_public_key_KeyID * keyIdObject = dpp_identity_identity_public_key_KeyID_ctor(keyId->_0);
        dpp_identity_identity_public_key_TimestampMillis * disabled_at_copy = disabled_at != nullptr ? dpp_identity_identity_public_key_TimestampMillis_ctor(disabled_at->_0) : nullptr;
        dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 * ipkv0 = dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_ctor(keyIdObject, purposeObject, securityLevelObject,
            contract_bounds_copy,
            keyTypeObject, read_only, binaryData, disabled_at_copy);
        printf("IdentityPublicKeyV0(%lx\n", (long)ipkv0);
        return ipkv0;
    }
SWIGINTERN void delete_dpp_identity_identity_public_key_v0_IdentityPublicKeyV0(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *self){
//         printf("~IdentityPublicKeyV0(%lx)\n", (unsigned long)self);
//         printf("  ->purpose(%lx)\n", (uint64_t)self->purpose);
//         printf("  ->data->_0(%lx)\n", (uint64_t)self->data->_0);
//         printf("  ->data->_0->values(%lx)\n", (uint64_t)self->data->_0->values);
//         printf("  ->data(%lx)\n", (uint64_t)self->data);
        dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_destroy(self); //crash
    }
SWIGINTERN enum dpp_identity_identity_public_key_key_type_KeyType dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_getKeyType(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *self){
        return *self->key_type;
    }
SWIGINTERN enum dpp_identity_identity_public_key_purpose_Purpose dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_getPurpose(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *self){
        return *self->purpose;
    }
SWIGINTERN enum dpp_identity_identity_public_key_security_level_SecurityLevel dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_getSecurityLevel(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *self){
        return *self->security_level;
    }
SWIGINTERN dpp_identity_identity_public_key_IdentityPublicKey *new_dpp_identity_identity_public_key_IdentityPublicKey(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *ipkv0){
        return dpp_identity_identity_public_key_IdentityPublicKey_V0_ctor(
            platform_mobile_identity_IdentityPublicKeyV0_clone(ipkv0)
        );
    }
SWIGINTERN void delete_dpp_identity_identity_public_key_IdentityPublicKey(dpp_identity_identity_public_key_IdentityPublicKey *self){
        dpp_identity_identity_public_key_IdentityPublicKey_destroy(self);
    }
SWIGINTERN dpp_prelude_Revision *new_dpp_prelude_Revision__SWIG_0(){
        return dpp_prelude_Revision_ctor(0);
    }
SWIGINTERN dpp_prelude_Revision *new_dpp_prelude_Revision__SWIG_1(long long timestamp){
        return dpp_prelude_Revision_ctor(timestamp);
    }
SWIGINTERN void delete_dpp_prelude_Revision(dpp_prelude_Revision *self){
        dpp_prelude_Revision_destroy(self);
    }
SWIGINTERN long long dpp_prelude_Revision_toLong(dpp_prelude_Revision *self){
        return self->_0;
    }
SWIGINTERN bool dpp_prelude_Revision_objectEquals(dpp_prelude_Revision *self,dpp_prelude_Revision *other){
        if (self == other) return true;
        if (self == nullptr || other == nullptr) return false;
        return self->_0 == other->_0;
    }
SWIGINTERN dpp_identity_v0_IdentityV0 *new_dpp_identity_v0_IdentityV0(platform_value_types_identifier_Identifier *identifier,std_collections_Map_keys_dpp_identity_identity_public_key_KeyID_values_dpp_identity_identity_public_key_IdentityPublicKey *public_keys,uint64_t balance,dpp_prelude_Revision *revision){
        return dpp_identity_v0_IdentityV0_ctor(
            Identifier_clone(identifier),
            platform_mobile_identity_std_collections_Map_keys_dpp_identity_identity_public_key_KeyID_values_dpp_identity_identity_public_key_IdentityPublicKey_clone(public_keys),
            balance,
            dpp_prelude_Revision_ctor(revision->_0)
        );
    }
SWIGINTERN void delete_dpp_identity_v0_IdentityV0(dpp_identity_v0_IdentityV0 *self){
        printf("~IdentityV0(%lx)\n", (uint64_t)self);
        dpp_identity_v0_IdentityV0_destroy(self);
    }
SWIGINTERN int dpp_identity_v0_IdentityV0_getPublicKeyCount(dpp_identity_v0_IdentityV0 *self){
        return self->public_keys->count;
    }
SWIGINTERN dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *dpp_identity_v0_IdentityV0_getPublicKey(dpp_identity_v0_IdentityV0 *self,uint32_t index){
        if (index < self->public_keys->count) {
            return self->public_keys->values[index]->v0._0;
        } else {
            return NULL;
        }
    }
SWIGINTERN dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *dpp_identity_v0_IdentityV0_getPublicKeyById(dpp_identity_v0_IdentityV0 *self,uint32_t id){
        for (int i = 0; i < self->public_keys->count; ++i) {
            if (self->public_keys->keys[i]->_0 == id)
                return self->public_keys->values[i]->v0._0;
        }
        return NULL;
    }
SWIGINTERN long long dpp_identity_v0_IdentityV0_getBalance(dpp_identity_v0_IdentityV0 *self){
        return (long)self->balance;
    }
SWIGINTERN std_collections_Map_keys_dpp_identity_identity_public_key_KeyID_values_dpp_identity_identity_public_key_IdentityPublicKey *dpp_identity_v0_IdentityV0_getPublicKeys(dpp_identity_v0_IdentityV0 *self){
        return self->public_keys;
    }
SWIGINTERN dpp_identity_identity_Identity *new_dpp_identity_identity_Identity(dpp_identity_v0_IdentityV0 *identityV0){
        return dpp_identity_identity_Identity_V0_ctor(platform_mobile_identity_IdentityV0_clone(identityV0));
    }
SWIGINTERN void delete_dpp_identity_identity_Identity(dpp_identity_identity_Identity *self){
        printf("~Identity(%lx)\n", (uint64_t)self);
        dpp_identity_identity_Identity_destroy(self);
    }

#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_KeyType_1ECDSA_1SECP256K1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_key_type_KeyType result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_key_type_KeyType)dpp_identity_identity_public_key_key_type_KeyType::ECDSA_SECP256K1;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_KeyType_1BLS12_1381_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_key_type_KeyType result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_key_type_KeyType)dpp_identity_identity_public_key_key_type_KeyType::BLS12_381;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_KeyType_1ECDSA_1HASH160_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_key_type_KeyType result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_key_type_KeyType)dpp_identity_identity_public_key_key_type_KeyType::ECDSA_HASH160;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_KeyType_1BIP13_1SCRIPT_1HASH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_key_type_KeyType result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_key_type_KeyType)dpp_identity_identity_public_key_key_type_KeyType::BIP13_SCRIPT_HASH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_KeyType_1EDDSA_125519_1HASH160_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_key_type_KeyType result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_key_type_KeyType)dpp_identity_identity_public_key_key_type_KeyType::EDDSA_25519_HASH160;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_Purpose_1AUTHENTICATION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_purpose_Purpose result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_purpose_Purpose)dpp_identity_identity_public_key_purpose_Purpose::AUTHENTICATION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_Purpose_1ENCRYPTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_purpose_Purpose result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_purpose_Purpose)dpp_identity_identity_public_key_purpose_Purpose::ENCRYPTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_Purpose_1DECRYPTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_purpose_Purpose result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_purpose_Purpose)dpp_identity_identity_public_key_purpose_Purpose::DECRYPTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_Purpose_1TRANSFER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_purpose_Purpose result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_purpose_Purpose)dpp_identity_identity_public_key_purpose_Purpose::TRANSFER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_Purpose_1SYSTEM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_purpose_Purpose result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_purpose_Purpose)dpp_identity_identity_public_key_purpose_Purpose::SYSTEM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_Purpose_1VOTING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_purpose_Purpose result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_purpose_Purpose)dpp_identity_identity_public_key_purpose_Purpose::VOTING;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_SecurityLevel_1MASTER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_security_level_SecurityLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_security_level_SecurityLevel)dpp_identity_identity_public_key_security_level_SecurityLevel::MASTER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_SecurityLevel_1CRITICAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_security_level_SecurityLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_security_level_SecurityLevel)dpp_identity_identity_public_key_security_level_SecurityLevel::CRITICAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_SecurityLevel_1HIGH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_security_level_SecurityLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_security_level_SecurityLevel)dpp_identity_identity_public_key_security_level_SecurityLevel::HIGH;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_SecurityLevel_1MEDIUM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_security_level_SecurityLevel result;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_security_level_SecurityLevel)dpp_identity_identity_public_key_security_level_SecurityLevel::MEDIUM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_PublicKeyHash_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  rs_sdk_platform_types_identity_PublicKeyHash *arg1 = (rs_sdk_platform_types_identity_PublicKeyHash *) 0 ;
  uint8_t (*arg2)[20] = (uint8_t (*)[20]) 0 ;
  uint8_t *byteArray2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rs_sdk_platform_types_identity_PublicKeyHash **)&jarg1; 
  {
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return ;
    }
    const jsize sz = jenv->GetArrayLength(jarg2);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg2, 0);
    if (!jarr) return ;
    byteArray2 = (uint8_t *)memoryFactory.alloc(20); // this is a memory leak?
    memcpy(byteArray2, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg2, jarr, JNI_ABORT);
    arg2 = (uint8_t (*) [20])byteArray2;
  }
  if (arg1) (arg1)->_0 = (uint8_t (*)[20])arg2;
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) *arg2, 0);
  }
  
}


SWIGEXPORT jbyteArray JNICALL Java_org_dashj_platform_sdk_exampleJNI_PublicKeyHash_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  rs_sdk_platform_types_identity_PublicKeyHash *arg1 = (rs_sdk_platform_types_identity_PublicKeyHash *) 0 ;
  uint8_t (*result)[20] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rs_sdk_platform_types_identity_PublicKeyHash **)&jarg1; 
  result = (uint8_t (*)[20]) ((arg1)->_0);
  {
    jresult = jenv->NewByteArray(20);
    jenv->SetByteArrayRegion(jresult, 0, 20, (jbyte *)(*result));
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1PublicKeyHash(JNIEnv *jenv, jclass jcls, jbyteArray jarg1) {
  jlong jresult = 0 ;
  uint8_t (*arg1)[20] = (uint8_t (*)[20]) 0 ;
  uint8_t *byteArray1 ;
  rs_sdk_platform_types_identity_PublicKeyHash *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return 0;
    }
    const jsize sz = jenv->GetArrayLength(jarg1);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg1, 0);
    if (!jarr) return 0;
    byteArray1 = (uint8_t *)memoryFactory.alloc(20); // this is a memory leak?
    memcpy(byteArray1, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg1, jarr, JNI_ABORT);
    arg1 = (uint8_t (*) [20])byteArray1;
  }
  result = (rs_sdk_platform_types_identity_PublicKeyHash *)new_rs_sdk_platform_types_identity_PublicKeyHash((unsigned char (*)[20])arg1);
  *(rs_sdk_platform_types_identity_PublicKeyHash **)&jresult = result; 
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) *arg1, 0);
  }
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1PublicKeyHash(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  rs_sdk_platform_types_identity_PublicKeyHash *arg1 = (rs_sdk_platform_types_identity_PublicKeyHash *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(rs_sdk_platform_types_identity_PublicKeyHash **)&jarg1; 
  delete_rs_sdk_platform_types_identity_PublicKeyHash(arg1);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_BinaryData_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  platform_value_types_binary_data_BinaryData *arg1 = (platform_value_types_binary_data_BinaryData *) 0 ;
  Vec_u8 *arg2 = (Vec_u8 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_binary_data_BinaryData **)&jarg1; 
  
  uint8_t * _buffer_arg2 = (uint8_t*)(jenv)->GetByteArrayElements(jarg2, 0);
  int size_arg2 = (jenv)->GetArrayLength(jarg2);
  uint8_t * byteArray_arg2 = (uint8_t *)memoryFactory.alloc(size_arg2);
  memcpy(byteArray_arg2, _buffer_arg2, size_arg2);
  printf("typemap(in) Vec_u8 *: %ld, [%lx]%d\n", size_arg2, (long)_buffer_arg2, _buffer_arg2[0]);
  arg2 = Vec_u8_ctor(size_arg2, byteArray_arg2);
  //arg2 = Vec_u8_ctor((uintptr_t)byteArray_arg2, (uint8_t*)size_arg2); // problem with order of parameters
  printf("typemap(in) Vec_u8 *: %lx\n", arg2);
  printf("typemap(in) Vec_u8 *: count: %ld\n", arg2->count);
  printf("typemap(in) Vec_u8 *: count: %ld, values: [%lx]\n", arg2->count, (long)arg2->values);
  printf("typemap(in) Vec_u8 *: count: %ld, values: [%lx]%d\n", arg2->count, (long)arg2->values, arg2->values[0]);
  
  if (arg1) (arg1)->_0 = arg2;
  
  printf("typemap(argout) Vec_u8 *: %ld, [%lx]%d\n", arg2->count, (long)arg2->values, arg2->values[0]);
  //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) _buffer_arg2, 0);
  jenv->ReleaseByteArrayElements(jarg2, (jbyte *) _buffer_arg2, 0);
  printf("typemap(argout) Vec_u8 *: %ld, [%lx]%d\n", arg2->count, (long)arg2->values, arg2->values[0]);
  
}


SWIGEXPORT jbyteArray JNICALL Java_org_dashj_platform_sdk_exampleJNI_BinaryData_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  platform_value_types_binary_data_BinaryData *arg1 = (platform_value_types_binary_data_BinaryData *) 0 ;
  Vec_u8 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_binary_data_BinaryData **)&jarg1; 
  result = (Vec_u8 *) ((arg1)->_0);
  {
    printf("typemap(out) Vec_u8* %lx\n", (long)result);
    if (!result) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vec_u8* null array");
      return 0;
    }
    if (!result->values) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vec_u8.values null array");
      return 0;
    }
    printf("  (count: %ld, values: [%lx], %d)\n", result->count, (long)result->values, result->values[0]);
    jresult = jenv->NewByteArray(result->count);
    jenv->SetByteArrayRegion(jresult, 0, result->count, (jbyte *) result->values);
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1BinaryData(JNIEnv *jenv, jclass jcls, jbyteArray jarg1) {
  jlong jresult = 0 ;
  Vec_u8 *arg1 = (Vec_u8 *) 0 ;
  platform_value_types_binary_data_BinaryData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  
  uint8_t * _buffer_arg1 = (uint8_t*)(jenv)->GetByteArrayElements(jarg1, 0);
  int size_arg1 = (jenv)->GetArrayLength(jarg1);
  uint8_t * byteArray_arg1 = (uint8_t *)memoryFactory.alloc(size_arg1);
  memcpy(byteArray_arg1, _buffer_arg1, size_arg1);
  printf("typemap(in) Vec_u8 *: %ld, [%lx]%d\n", size_arg1, (long)_buffer_arg1, _buffer_arg1[0]);
  arg1 = Vec_u8_ctor(size_arg1, byteArray_arg1);
  //arg1 = Vec_u8_ctor((uintptr_t)byteArray_arg1, (uint8_t*)size_arg1); // problem with order of parameters
  printf("typemap(in) Vec_u8 *: %lx\n", arg1);
  printf("typemap(in) Vec_u8 *: count: %ld\n", arg1->count);
  printf("typemap(in) Vec_u8 *: count: %ld, values: [%lx]\n", arg1->count, (long)arg1->values);
  printf("typemap(in) Vec_u8 *: count: %ld, values: [%lx]%d\n", arg1->count, (long)arg1->values, arg1->values[0]);
  
  result = (platform_value_types_binary_data_BinaryData *)new_platform_value_types_binary_data_BinaryData(arg1);
  *(platform_value_types_binary_data_BinaryData **)&jresult = result; 
  
  printf("typemap(argout) Vec_u8 *: %ld, [%lx]%d\n", arg1->count, (long)arg1->values, arg1->values[0]);
  //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) _buffer_arg1, 0);
  jenv->ReleaseByteArrayElements(jarg1, (jbyte *) _buffer_arg1, 0);
  printf("typemap(argout) Vec_u8 *: %ld, [%lx]%d\n", arg1->count, (long)arg1->values, arg1->values[0]);
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1BinaryData(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  platform_value_types_binary_data_BinaryData *arg1 = (platform_value_types_binary_data_BinaryData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(platform_value_types_binary_data_BinaryData **)&jarg1; 
  delete_platform_value_types_binary_data_BinaryData(arg1);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentifierBytes32_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  platform_value_types_identifier_IdentifierBytes32 *arg1 = (platform_value_types_identifier_IdentifierBytes32 *) 0 ;
  uint8_t (*arg2)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_IdentifierBytes32 **)&jarg1; 
  {
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return ;
    }
    const jsize sz = jenv->GetArrayLength(jarg2);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg2, 0);
    if (!jarr) return ;
    byteArray2 = (uint8_t *)memoryFactory.alloc(32); // this is a memory leak?
    memcpy(byteArray2, jarr, sz);
    
    //memcpy(arg2, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg2, jarr, JNI_ABORT);
    arg2 = (uint8_t (*) [32])byteArray2;
  }
  if (arg1) (arg1)->_0 = (uint8_t (*)[32])arg2;
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) *arg2, 0);
    
  }
  
}


SWIGEXPORT jbyteArray JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentifierBytes32_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  platform_value_types_identifier_IdentifierBytes32 *arg1 = (platform_value_types_identifier_IdentifierBytes32 *) 0 ;
  uint8_t (*result)[32] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_IdentifierBytes32 **)&jarg1; 
  result = (uint8_t (*)[32]) ((arg1)->_0);
  {
    jresult = jenv->NewByteArray(32);
    jenv->SetByteArrayRegion(jresult, 0, 32, (jbyte *)(*result));
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1IdentifierBytes32(JNIEnv *jenv, jclass jcls, jbyteArray jarg1) {
  jlong jresult = 0 ;
  uint8_t (*arg1)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray1 ;
  platform_value_types_identifier_IdentifierBytes32 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return 0;
    }
    const jsize sz = jenv->GetArrayLength(jarg1);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg1, 0);
    if (!jarr) return 0;
    byteArray1 = (uint8_t *)memoryFactory.alloc(32); // this is a memory leak?
    memcpy(byteArray1, jarr, sz);
    
    //memcpy(arg1, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg1, jarr, JNI_ABORT);
    arg1 = (uint8_t (*) [32])byteArray1;
  }
  result = (platform_value_types_identifier_IdentifierBytes32 *)new_platform_value_types_identifier_IdentifierBytes32((unsigned char (*)[32])arg1);
  *(platform_value_types_identifier_IdentifierBytes32 **)&jresult = result; 
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) *arg1, 0);
    
  }
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1IdentifierBytes32(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  platform_value_types_identifier_IdentifierBytes32 *arg1 = (platform_value_types_identifier_IdentifierBytes32 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(platform_value_types_identifier_IdentifierBytes32 **)&jarg1; 
  delete_platform_value_types_identifier_IdentifierBytes32(arg1);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_Identifier_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  platform_value_types_identifier_IdentifierBytes32 *arg2 = (platform_value_types_identifier_IdentifierBytes32 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  arg2 = *(platform_value_types_identifier_IdentifierBytes32 **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_Identifier_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  platform_value_types_identifier_IdentifierBytes32 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  result = (platform_value_types_identifier_IdentifierBytes32 *) ((arg1)->_0);
  *(platform_value_types_identifier_IdentifierBytes32 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1Identifier(JNIEnv *jenv, jclass jcls, jbyteArray jarg1) {
  jlong jresult = 0 ;
  uint8_t (*arg1)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray1 ;
  platform_value_types_identifier_Identifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return 0;
    }
    const jsize sz = jenv->GetArrayLength(jarg1);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg1, 0);
    if (!jarr) return 0;
    byteArray1 = (uint8_t *)memoryFactory.alloc(32); // this is a memory leak?
    memcpy(byteArray1, jarr, sz);
    
    //memcpy(arg1, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg1, jarr, JNI_ABORT);
    arg1 = (uint8_t (*) [32])byteArray1;
  }
  result = (platform_value_types_identifier_Identifier *)new_platform_value_types_identifier_Identifier((unsigned char (*)[32])arg1);
  *(platform_value_types_identifier_Identifier **)&jresult = result; 
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) *arg1, 0);
    
  }
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1Identifier(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  delete_platform_value_types_identifier_Identifier(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1KeyID(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  dpp_identity_identity_public_key_KeyID *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (dpp_identity_identity_public_key_KeyID *)new_dpp_identity_identity_public_key_KeyID(arg1);
  *(dpp_identity_identity_public_key_KeyID **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1KeyID(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_public_key_KeyID *arg1 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_public_key_KeyID **)&jarg1; 
  delete_dpp_identity_identity_public_key_KeyID(arg1);
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_KeyID_1toInt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_KeyID *arg1 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_KeyID **)&jarg1; 
  result = (int)dpp_identity_identity_public_key_KeyID_toInt(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_dashj_platform_sdk_exampleJNI_KeyID_1objectEquals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  dpp_identity_identity_public_key_KeyID *arg1 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  dpp_identity_identity_public_key_KeyID *arg2 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_KeyID **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_KeyID **)&jarg2; 
  result = (bool)dpp_identity_identity_public_key_KeyID_objectEquals(arg1,arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1SingleContract_1Body_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *) 0 ;
  platform_value_types_identifier_Identifier *arg2 = (platform_value_types_identifier_Identifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body **)&jarg1; 
  arg2 = *(platform_value_types_identifier_Identifier **)&jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1SingleContract_1Body_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *) 0 ;
  platform_value_types_identifier_Identifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body **)&jarg1; 
  result = (platform_value_types_identifier_Identifier *) ((arg1)->id);
  *(platform_value_types_identifier_Identifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1ContractBounds_1SingleContract_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1SingleContractDocumentType_1Body_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *) 0 ;
  platform_value_types_identifier_Identifier *arg2 = (platform_value_types_identifier_Identifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body **)&jarg1; 
  arg2 = *(platform_value_types_identifier_Identifier **)&jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1SingleContractDocumentType_1Body_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *) 0 ;
  platform_value_types_identifier_Identifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body **)&jarg1; 
  result = (platform_value_types_identifier_Identifier *) ((arg1)->id);
  *(platform_value_types_identifier_Identifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1SingleContractDocumentType_1Body_1document_1type_1name_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->document_type_name;
    if (arg2) {
      arg1->document_type_name = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->document_type_name, (const char *)arg2);
    } else {
      arg1->document_type_name = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1SingleContractDocumentType_1Body_1document_1type_1name_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body **)&jarg1; 
  result = (char *) ((arg1)->document_type_name);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1ContractBounds_1SingleContractDocumentType_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::Tag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg1; 
  arg2 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::Tag)jarg2; 
  if (arg1) (arg1)->tag = arg2;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::Tag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg1; 
  result = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::Tag) ((arg1)->tag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1single_1contract_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *arg2 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body **)&jarg2; 
  if (arg1) (arg1)->single_contract = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1single_1contract_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg1; 
  result = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body *)& ((arg1)->single_contract);
  *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContract_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1single_1contract_1document_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *arg2 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body **)&jarg2; 
  if (arg1) (arg1)->single_contract_document_type = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_ContractBounds_1single_1contract_1document_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg1; 
  result = (dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body *)& ((arg1)->single_contract_document_type);
  *(dpp_identity_identity_public_key_contract_bounds_ContractBounds::SingleContractDocumentType_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1ContractBounds_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  result = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *)new_dpp_identity_identity_public_key_contract_bounds_ContractBounds__SWIG_0(arg1);
  *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1ContractBounds_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  char *arg2 = (char *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *)new_dpp_identity_identity_public_key_contract_bounds_ContractBounds__SWIG_1(arg1,arg2);
  *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jresult = result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1ContractBounds(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg1 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg1; 
  delete_dpp_identity_identity_public_key_contract_bounds_ContractBounds(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1TimestampMillis_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_TimestampMillis *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_identity_identity_public_key_TimestampMillis *)new_dpp_identity_identity_public_key_TimestampMillis__SWIG_0();
  *(dpp_identity_identity_public_key_TimestampMillis **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1TimestampMillis_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  long long arg1 ;
  dpp_identity_identity_public_key_TimestampMillis *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long long)jarg1; 
  result = (dpp_identity_identity_public_key_TimestampMillis *)new_dpp_identity_identity_public_key_TimestampMillis__SWIG_1(arg1);
  *(dpp_identity_identity_public_key_TimestampMillis **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1TimestampMillis(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_public_key_TimestampMillis *arg1 = (dpp_identity_identity_public_key_TimestampMillis *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_public_key_TimestampMillis **)&jarg1; 
  delete_dpp_identity_identity_public_key_TimestampMillis(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_TimestampMillis_1toLong(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_TimestampMillis *arg1 = (dpp_identity_identity_public_key_TimestampMillis *) 0 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_TimestampMillis **)&jarg1; 
  result = (long long)dpp_identity_identity_public_key_TimestampMillis_toLong(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_dashj_platform_sdk_exampleJNI_TimestampMillis_1objectEquals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  dpp_identity_identity_public_key_TimestampMillis *arg1 = (dpp_identity_identity_public_key_TimestampMillis *) 0 ;
  dpp_identity_identity_public_key_TimestampMillis *arg2 = (dpp_identity_identity_public_key_TimestampMillis *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_TimestampMillis **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_TimestampMillis **)&jarg2; 
  result = (bool)dpp_identity_identity_public_key_TimestampMillis_objectEquals(arg1,arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_KeyID *arg2 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_KeyID **)&jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_KeyID *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_KeyID *) ((arg1)->id);
  *(dpp_identity_identity_public_key_KeyID **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1contract_1bounds_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg2 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg2; 
  if (arg1) (arg1)->contract_bounds = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1contract_1bounds_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) ((arg1)->contract_bounds);
  *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1read_1only_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  if (arg1) (arg1)->read_only = arg2;
}


SWIGEXPORT jboolean JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1read_1only_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (bool) ((arg1)->read_only);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  platform_value_types_binary_data_BinaryData *arg2 = (platform_value_types_binary_data_BinaryData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(platform_value_types_binary_data_BinaryData **)&jarg2; 
  if (arg1) (arg1)->data = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  platform_value_types_binary_data_BinaryData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (platform_value_types_binary_data_BinaryData *) ((arg1)->data);
  *(platform_value_types_binary_data_BinaryData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1disabled_1at_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_TimestampMillis *arg2 = (dpp_identity_identity_public_key_TimestampMillis *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_TimestampMillis **)&jarg2; 
  if (arg1) (arg1)->disabled_at = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1disabled_1at_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_TimestampMillis *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_TimestampMillis *) ((arg1)->disabled_at);
  *(dpp_identity_identity_public_key_TimestampMillis **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1IdentityPublicKeyV0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jboolean jarg6, jlong jarg7, jobject jarg7_, jlong jarg8, jobject jarg8_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_KeyID *arg1 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  dpp_identity_identity_public_key_purpose_Purpose arg2 ;
  dpp_identity_identity_public_key_security_level_SecurityLevel arg3 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg4 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  dpp_identity_identity_public_key_key_type_KeyType arg5 ;
  bool arg6 ;
  platform_value_types_binary_data_BinaryData *arg7 = (platform_value_types_binary_data_BinaryData *) 0 ;
  dpp_identity_identity_public_key_TimestampMillis *arg8 = (dpp_identity_identity_public_key_TimestampMillis *) 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  (void)jarg7_;
  (void)jarg8_;
  arg1 = *(dpp_identity_identity_public_key_KeyID **)&jarg1; 
  arg2 = (dpp_identity_identity_public_key_purpose_Purpose)jarg2; 
  arg3 = (dpp_identity_identity_public_key_security_level_SecurityLevel)jarg3; 
  arg4 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg4; 
  arg5 = (dpp_identity_identity_public_key_key_type_KeyType)jarg5; 
  arg6 = jarg6 ? true : false; 
  arg7 = *(platform_value_types_binary_data_BinaryData **)&jarg7; 
  arg8 = *(dpp_identity_identity_public_key_TimestampMillis **)&jarg8; 
  result = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *)new_dpp_identity_identity_public_key_v0_IdentityPublicKeyV0(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1IdentityPublicKeyV0(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  delete_dpp_identity_identity_public_key_v0_IdentityPublicKeyV0(arg1);
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1getKeyType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  enum dpp_identity_identity_public_key_key_type_KeyType result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (enum dpp_identity_identity_public_key_key_type_KeyType)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_getKeyType(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1getPurpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  enum dpp_identity_identity_public_key_purpose_Purpose result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (enum dpp_identity_identity_public_key_purpose_Purpose)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_getPurpose(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKeyV0_1getSecurityLevel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  enum dpp_identity_identity_public_key_security_level_SecurityLevel result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (enum dpp_identity_identity_public_key_security_level_SecurityLevel)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_getSecurityLevel(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKey_1V0_1Body_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *arg1 = (dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *) 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg2 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_IdentityPublicKey::V0_Body **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKey_1V0_1Body_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *arg1 = (dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *) 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_IdentityPublicKey::V0_Body **)&jarg1; 
  result = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) ((arg1)->_0);
  *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1IdentityPublicKey_1V0_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *arg1 = (dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_public_key_IdentityPublicKey::V0_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKey_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dpp_identity_identity_public_key_IdentityPublicKey *arg1 = (dpp_identity_identity_public_key_IdentityPublicKey *) 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey::Tag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_IdentityPublicKey **)&jarg1; 
  arg2 = (dpp_identity_identity_public_key_IdentityPublicKey::Tag)jarg2; 
  if (arg1) (arg1)->tag = arg2;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKey_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey *arg1 = (dpp_identity_identity_public_key_IdentityPublicKey *) 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey::Tag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_IdentityPublicKey **)&jarg1; 
  result = (dpp_identity_identity_public_key_IdentityPublicKey::Tag) ((arg1)->tag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKey_1v0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_IdentityPublicKey *arg1 = (dpp_identity_identity_public_key_IdentityPublicKey *) 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *arg2 = (dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_IdentityPublicKey **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_IdentityPublicKey::V0_Body **)&jarg2; 
  if (arg1) (arg1)->v0 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityPublicKey_1v0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey *arg1 = (dpp_identity_identity_public_key_IdentityPublicKey *) 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_IdentityPublicKey **)&jarg1; 
  result = (dpp_identity_identity_public_key_IdentityPublicKey::V0_Body *)& ((arg1)->v0);
  *(dpp_identity_identity_public_key_IdentityPublicKey::V0_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1IdentityPublicKey(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_IdentityPublicKey *)new_dpp_identity_identity_public_key_IdentityPublicKey(arg1);
  *(dpp_identity_identity_public_key_IdentityPublicKey **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1IdentityPublicKey(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_public_key_IdentityPublicKey *arg1 = (dpp_identity_identity_public_key_IdentityPublicKey *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_public_key_IdentityPublicKey **)&jarg1; 
  delete_dpp_identity_identity_public_key_IdentityPublicKey(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1Revision_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dpp_prelude_Revision *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dpp_prelude_Revision *)new_dpp_prelude_Revision__SWIG_0();
  *(dpp_prelude_Revision **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1Revision_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  long long arg1 ;
  dpp_prelude_Revision *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long long)jarg1; 
  result = (dpp_prelude_Revision *)new_dpp_prelude_Revision__SWIG_1(arg1);
  *(dpp_prelude_Revision **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1Revision(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_prelude_Revision *arg1 = (dpp_prelude_Revision *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_prelude_Revision **)&jarg1; 
  delete_dpp_prelude_Revision(arg1);
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_Revision_1toLong(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_prelude_Revision *arg1 = (dpp_prelude_Revision *) 0 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_prelude_Revision **)&jarg1; 
  result = (long long)dpp_prelude_Revision_toLong(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_dashj_platform_sdk_exampleJNI_Revision_1objectEquals(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  dpp_prelude_Revision *arg1 = (dpp_prelude_Revision *) 0 ;
  dpp_prelude_Revision *arg2 = (dpp_prelude_Revision *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_prelude_Revision **)&jarg1; 
  arg2 = *(dpp_prelude_Revision **)&jarg2; 
  result = (bool)dpp_prelude_Revision_objectEquals(arg1,arg2);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityV0_1id_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  platform_value_types_identifier_Identifier *arg2 = (platform_value_types_identifier_Identifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  arg2 = *(platform_value_types_identifier_Identifier **)&jarg2; 
  if (arg1) (arg1)->id = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityV0_1id_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  platform_value_types_identifier_Identifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (platform_value_types_identifier_Identifier *) ((arg1)->id);
  *(platform_value_types_identifier_Identifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityV0_1revision_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  dpp_prelude_Revision *arg2 = (dpp_prelude_Revision *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  arg2 = *(dpp_prelude_Revision **)&jarg2; 
  if (arg1) (arg1)->revision = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityV0_1revision_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  dpp_prelude_Revision *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (dpp_prelude_Revision *) ((arg1)->revision);
  *(dpp_prelude_Revision **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1IdentityV0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jobject jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  std_collections_Map_keys_dpp_identity_identity_public_key_KeyID_values_dpp_identity_identity_public_key_IdentityPublicKey *arg2 = (std_collections_Map_keys_dpp_identity_identity_public_key_KeyID_values_dpp_identity_identity_public_key_IdentityPublicKey *) 0 ;
  uint64_t arg3 ;
  dpp_prelude_Revision *arg4 = (dpp_prelude_Revision *) 0 ;
  dpp_identity_v0_IdentityV0 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  {
    arg2 = java_map_KeyID_IdentityPublicKey_to_fermented_tree(jenv, jarg2);
  }
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg3) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg3);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg3, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg3 = 0;
    if (sz > 0) {
      arg3 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg3 = (arg3 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  arg4 = *(dpp_prelude_Revision **)&jarg4; 
  result = (dpp_identity_v0_IdentityV0 *)new_dpp_identity_v0_IdentityV0(arg1,arg2,arg3,arg4);
  *(dpp_identity_v0_IdentityV0 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1IdentityV0(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  delete_dpp_identity_v0_IdentityV0(arg1);
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityV0_1getPublicKeyCount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (int)dpp_identity_v0_IdentityV0_getPublicKeyCount(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityV0_1getPublicKey(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  uint32_t arg2 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  result = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *)dpp_identity_v0_IdentityV0_getPublicKey(arg1,arg2);
  *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityV0_1getPublicKeyById(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  uint32_t arg2 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  result = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *)dpp_identity_v0_IdentityV0_getPublicKeyById(arg1,arg2);
  *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityV0_1getBalance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (long long)dpp_identity_v0_IdentityV0_getBalance(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_org_dashj_platform_sdk_exampleJNI_IdentityV0_1getPublicKeys(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  std_collections_Map_keys_dpp_identity_identity_public_key_KeyID_values_dpp_identity_identity_public_key_IdentityPublicKey *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (std_collections_Map_keys_dpp_identity_identity_public_key_KeyID_values_dpp_identity_identity_public_key_IdentityPublicKey *)dpp_identity_v0_IdentityV0_getPublicKeys(arg1);
  {
    jresult = fermented_tree_to_java_map_KeyID_IdentityPublicKey(jenv, result);
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_Identity_1V0_1Body_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_Identity::V0_Body *arg1 = (dpp_identity_identity_Identity::V0_Body *) 0 ;
  dpp_identity_v0_IdentityV0 *arg2 = (dpp_identity_v0_IdentityV0 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_Identity::V0_Body **)&jarg1; 
  arg2 = *(dpp_identity_v0_IdentityV0 **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_Identity_1V0_1Body_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_Identity::V0_Body *arg1 = (dpp_identity_identity_Identity::V0_Body *) 0 ;
  dpp_identity_v0_IdentityV0 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_Identity::V0_Body **)&jarg1; 
  result = (dpp_identity_v0_IdentityV0 *) ((arg1)->_0);
  *(dpp_identity_v0_IdentityV0 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1Identity_1V0_1Body(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_Identity::V0_Body *arg1 = (dpp_identity_identity_Identity::V0_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_Identity::V0_Body **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_Identity_1tag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dpp_identity_identity_Identity *arg1 = (dpp_identity_identity_Identity *) 0 ;
  dpp_identity_identity_Identity::Tag arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_Identity **)&jarg1; 
  arg2 = (dpp_identity_identity_Identity::Tag)jarg2; 
  if (arg1) (arg1)->tag = arg2;
}


SWIGEXPORT jint JNICALL Java_org_dashj_platform_sdk_exampleJNI_Identity_1tag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dpp_identity_identity_Identity *arg1 = (dpp_identity_identity_Identity *) 0 ;
  dpp_identity_identity_Identity::Tag result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_Identity **)&jarg1; 
  result = (dpp_identity_identity_Identity::Tag) ((arg1)->tag);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_Identity_1v0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_Identity *arg1 = (dpp_identity_identity_Identity *) 0 ;
  dpp_identity_identity_Identity::V0_Body *arg2 = (dpp_identity_identity_Identity::V0_Body *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_Identity **)&jarg1; 
  arg2 = *(dpp_identity_identity_Identity::V0_Body **)&jarg2; 
  if (arg1) (arg1)->v0 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_Identity_1v0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_Identity *arg1 = (dpp_identity_identity_Identity *) 0 ;
  dpp_identity_identity_Identity::V0_Body *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_Identity **)&jarg1; 
  result = (dpp_identity_identity_Identity::V0_Body *)& ((arg1)->v0);
  *(dpp_identity_identity_Identity::V0_Body **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1Identity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  dpp_identity_identity_Identity *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (dpp_identity_identity_Identity *)new_dpp_identity_identity_Identity(arg1);
  *(dpp_identity_identity_Identity **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1Identity(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_Identity *arg1 = (dpp_identity_identity_Identity *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_Identity **)&jarg1; 
  delete_dpp_identity_identity_Identity(arg1);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_platform_1value_1Hash256_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  platform_value_Hash256 *arg1 = (platform_value_Hash256 *) 0 ;
  uint8_t (*arg2)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_Hash256 **)&jarg1; 
  {
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return ;
    }
    const jsize sz = jenv->GetArrayLength(jarg2);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg2, 0);
    if (!jarr) return ;
    byteArray2 = (uint8_t *)memoryFactory.alloc(32); // this is a memory leak?
    memcpy(byteArray2, jarr, sz);
    
    //memcpy(arg2, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg2, jarr, JNI_ABORT);
    arg2 = (uint8_t (*) [32])byteArray2;
  }
  if (arg1) (arg1)->_0 = (uint8_t (*)[32])arg2;
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) *arg2, 0);
    
  }
  
}


SWIGEXPORT jbyteArray JNICALL Java_org_dashj_platform_sdk_exampleJNI_platform_1value_1Hash256_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  platform_value_Hash256 *arg1 = (platform_value_Hash256 *) 0 ;
  uint8_t (*result)[32] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_Hash256 **)&jarg1; 
  result = (uint8_t (*)[32]) ((arg1)->_0);
  {
    jresult = jenv->NewByteArray(32);
    jenv->SetByteArrayRegion(jresult, 0, 32, (jbyte *)(*result));
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1platform_1value_1Hash256(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  platform_value_Hash256 *arg1 = (platform_value_Hash256 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(platform_value_Hash256 **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dpp_1identity_1identity_1public_1key_1KeyCount_1_10_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_KeyCount *arg1 = (dpp_identity_identity_public_key_KeyCount *) 0 ;
  dpp_identity_identity_public_key_KeyID *arg2 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_KeyCount **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_KeyID **)&jarg2; 
  if (arg1) (arg1)->_0 = arg2;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dpp_1identity_1identity_1public_1key_1KeyCount_1_10_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_KeyCount *arg1 = (dpp_identity_identity_public_key_KeyCount *) 0 ;
  dpp_identity_identity_public_key_KeyID *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_KeyCount **)&jarg1; 
  result = (dpp_identity_identity_public_key_KeyID *) ((arg1)->_0);
  *(dpp_identity_identity_public_key_KeyID **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1dpp_1identity_1identity_1public_1key_1KeyCount(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dpp_identity_identity_public_key_KeyCount *arg1 = (dpp_identity_identity_public_key_KeyCount *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dpp_identity_identity_public_key_KeyCount **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_rsSdkPlatformTypesIdentityPublicKeyHashCtor(JNIEnv *jenv, jclass jcls, jbyteArray jarg1) {
  jlong jresult = 0 ;
  uint8_t (*arg1)[20] = (uint8_t (*)[20]) 0 ;
  uint8_t *byteArray1 ;
  rs_sdk_platform_types_identity_PublicKeyHash *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return 0;
    }
    const jsize sz = jenv->GetArrayLength(jarg1);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg1, 0);
    if (!jarr) return 0;
    byteArray1 = (uint8_t *)memoryFactory.alloc(20); // this is a memory leak?
    memcpy(byteArray1, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg1, jarr, JNI_ABORT);
    arg1 = (uint8_t (*) [20])byteArray1;
  }
  result = (rs_sdk_platform_types_identity_PublicKeyHash *)rs_sdk_platform_types_identity_PublicKeyHash_ctor((unsigned char (*)[20])arg1);
  *(rs_sdk_platform_types_identity_PublicKeyHash **)&jresult = result; 
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) *arg1, 0);
  }
  
  return jresult;
}


SWIGEXPORT jbyteArray JNICALL Java_org_dashj_platform_sdk_exampleJNI_rsSdkPlatformTypesIdentityPublicKeyHashGet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  rs_sdk_platform_types_identity_PublicKeyHash *arg1 = (rs_sdk_platform_types_identity_PublicKeyHash *) 0 ;
  uint8_t (*result)[20] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rs_sdk_platform_types_identity_PublicKeyHash **)&jarg1; 
  result = (uint8_t (*)[20])rs_sdk_platform_types_identity_PublicKeyHash_get_0((rs_sdk_platform_types_identity_PublicKeyHash const *)arg1);
  {
    jresult = jenv->NewByteArray(20);
    jenv->SetByteArrayRegion(jresult, 0, 20, (jbyte *)(*result));
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_rsSdkPlatformTypesIdentityPublicKeyHashSet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  rs_sdk_platform_types_identity_PublicKeyHash *arg1 = (rs_sdk_platform_types_identity_PublicKeyHash *) 0 ;
  uint8_t (*arg2)[20] = (uint8_t (*)[20]) 0 ;
  uint8_t *byteArray2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(rs_sdk_platform_types_identity_PublicKeyHash **)&jarg1; 
  {
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return ;
    }
    const jsize sz = jenv->GetArrayLength(jarg2);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg2, 0);
    if (!jarr) return ;
    byteArray2 = (uint8_t *)memoryFactory.alloc(20); // this is a memory leak?
    memcpy(byteArray2, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg2, jarr, JNI_ABORT);
    arg2 = (uint8_t (*) [20])byteArray2;
  }
  rs_sdk_platform_types_identity_PublicKeyHash_set_0(arg1,(unsigned char (*)[20])arg2);
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) *arg2, 0);
  }
  
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformMobileConvertToPkh(JNIEnv *jenv, jclass jcls, jbyteArray jarg1) {
  jlong jresult = 0 ;
  uint8_t (*arg1)[20] = (uint8_t (*)[20]) 0 ;
  uint8_t *byteArray1 ;
  rs_sdk_platform_types_identity_PublicKeyHash *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return 0;
    }
    const jsize sz = jenv->GetArrayLength(jarg1);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg1, 0);
    if (!jarr) return 0;
    byteArray1 = (uint8_t *)memoryFactory.alloc(20); // this is a memory leak?
    memcpy(byteArray1, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg1, jarr, JNI_ABORT);
    arg1 = (uint8_t (*) [20])byteArray1;
  }
  result = (rs_sdk_platform_types_identity_PublicKeyHash *)platform_mobile_convert_to_pkh((unsigned char (*)[20])arg1);
  *(rs_sdk_platform_types_identity_PublicKeyHash **)&jresult = result; 
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) *arg1, 0);
  }
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformMobileGetBinaryData(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  platform_value_types_binary_data_BinaryData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (platform_value_types_binary_data_BinaryData *)platform_mobile_get_binary_data();
  *(platform_value_types_binary_data_BinaryData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformMobileGetBinaryData2(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  platform_value_types_binary_data_BinaryData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (platform_value_types_binary_data_BinaryData *)platform_mobile_get_binary_data2();
  *(platform_value_types_binary_data_BinaryData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformMobileIdentityIdentityV0Clone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  dpp_identity_v0_IdentityV0 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (dpp_identity_v0_IdentityV0 *)platform_mobile_identity_IdentityV0_clone(arg1);
  *(dpp_identity_v0_IdentityV0 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_getIdentity2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  dpp_identity_identity_Identity *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  result = (dpp_identity_identity_Identity *)platform_mobile_identity_get_identity2(arg1);
  *(dpp_identity_identity_Identity **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_createBasicIdentity(JNIEnv *jenv, jclass jcls, jbyteArray jarg1) {
  jlong jresult = 0 ;
  uint8_t (*arg1)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray1 ;
  dpp_identity_identity_Identity *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return 0;
    }
    const jsize sz = jenv->GetArrayLength(jarg1);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg1, 0);
    if (!jarr) return 0;
    byteArray1 = (uint8_t *)memoryFactory.alloc(32); // this is a memory leak?
    memcpy(byteArray1, jarr, sz);
    
    //memcpy(arg1, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg1, jarr, JNI_ABORT);
    arg1 = (uint8_t (*) [32])byteArray1;
  }
  result = (dpp_identity_identity_Identity *)platform_mobile_identity_create_basic_identity((unsigned char (*)[32])arg1);
  *(dpp_identity_identity_Identity **)&jresult = result; 
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) *arg1, 0);
    
  }
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformMobileIdentityIdentityClone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_Identity *arg1 = (dpp_identity_identity_Identity *) 0 ;
  dpp_identity_identity_Identity *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_Identity **)&jarg1; 
  result = (dpp_identity_identity_Identity *)platform_mobile_identity_Identity_clone(arg1);
  *(dpp_identity_identity_Identity **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_getIdentityContractBounds(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  platform_value_types_identifier_Identifier *arg2 = (platform_value_types_identifier_Identifier *) 0 ;
  dpp_identity_identity_Identity *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  arg2 = *(platform_value_types_identifier_Identifier **)&jarg2; 
  result = (dpp_identity_identity_Identity *)platform_mobile_identity_get_identity_contract_bounds(arg1,arg2);
  *(dpp_identity_identity_Identity **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformMobileIdentityIdentityPublicKeyV0Clone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *)platform_mobile_identity_IdentityPublicKeyV0_clone(arg1);
  *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformMobileIdentityIdentityPublicKeyClone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey *arg1 = (dpp_identity_identity_public_key_IdentityPublicKey *) 0 ;
  dpp_identity_identity_public_key_IdentityPublicKey *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_IdentityPublicKey **)&jarg1; 
  result = (dpp_identity_identity_public_key_IdentityPublicKey *)platform_mobile_identity_IdentityPublicKey_clone(arg1);
  *(dpp_identity_identity_public_key_IdentityPublicKey **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformMobileFetchIdentityFetchIdentityWithCore(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  Result_ok_dpp_identity_identity_Identity_err_String *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  result = (Result_ok_dpp_identity_identity_Identity_err_String *)platform_mobile_fetch_identity_fetch_identity_with_core(arg1);
  {
    if (!result) {
      jresult = NULL;
    } else {
      jclass resultClass = jenv->FindClass("org/dashj/platform/sdk/base/Result");
      
      if (result->ok != NULL) {
        jclass myClass = jenv->FindClass("org/dashj/platform/sdk/Identity");
        jmethodID constructor = jenv->GetMethodID(myClass, "<init>", "(JZ)V");
        void * clonedObject = platform_mobile_identity_Identity_clone(result->ok);
        jobject okObject = jenv->NewObject(myClass, constructor, (jlong) clonedObject, false);
        
        jmethodID midSuccess = jenv->GetStaticMethodID(resultClass, "Ok", "(Ljava/lang/Object;)Lorg/dashj/platform/sdk/base/Result;");
        jresult = jenv->CallStaticObjectMethod(resultClass, midSuccess, okObject);
      } else {
        jstring errorString = jenv->NewStringUTF(result->error);
        jmethodID midFailure = jenv->GetStaticMethodID(resultClass, "Err", "(Ljava/lang/Object;)Lorg/dashj/platform/sdk/base/Result;");
        jresult = jenv->CallStaticObjectMethod(resultClass, midFailure, errorString);
      }
      // destroy the Result<T, E>
      Result_ok_dpp_identity_identity_Identity_err_String_destroy(result);
    }
  }
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_org_dashj_platform_sdk_exampleJNI_getIdentityByPublicKeyHash(JNIEnv *jenv, jclass jcls, jbyteArray jarg1, jobject jarg2, jobject jarg3) {
  jobject jresult = 0 ;
  uint8_t (*arg1)[20] = (uint8_t (*)[20]) 0 ;
  uint64_t arg2 ;
  uint64_t arg3 ;
  uint8_t *byteArray1 ;
  Result_ok_dpp_identity_identity_Identity_err_String *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return 0;
    }
    const jsize sz = jenv->GetArrayLength(jarg1);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg1, 0);
    if (!jarr) return 0;
    byteArray1 = (uint8_t *)memoryFactory.alloc(20); // this is a memory leak?
    memcpy(byteArray1, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg1, jarr, JNI_ABORT);
    arg1 = (uint8_t (*) [20])byteArray1;
  }
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg3) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg3);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg3, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg3 = 0;
    if (sz > 0) {
      arg3 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg3 = (arg3 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  result = (Result_ok_dpp_identity_identity_Identity_err_String *)platform_mobile_fetch_identity_fetch_identity_with_keyhash((unsigned char (*)[20])arg1,arg2,arg3);
  {
    if (!result) {
      jresult = NULL;
    } else {
      jclass resultClass = jenv->FindClass("org/dashj/platform/sdk/base/Result");
      
      if (result->ok != NULL) {
        jclass myClass = jenv->FindClass("org/dashj/platform/sdk/Identity");
        jmethodID constructor = jenv->GetMethodID(myClass, "<init>", "(JZ)V");
        void * clonedObject = platform_mobile_identity_Identity_clone(result->ok);
        jobject okObject = jenv->NewObject(myClass, constructor, (jlong) clonedObject, false);
        
        jmethodID midSuccess = jenv->GetStaticMethodID(resultClass, "Ok", "(Ljava/lang/Object;)Lorg/dashj/platform/sdk/base/Result;");
        jresult = jenv->CallStaticObjectMethod(resultClass, midSuccess, okObject);
      } else {
        jstring errorString = jenv->NewStringUTF(result->error);
        jmethodID midFailure = jenv->GetStaticMethodID(resultClass, "Err", "(Ljava/lang/Object;)Lorg/dashj/platform/sdk/base/Result;");
        jresult = jenv->CallStaticObjectMethod(resultClass, midFailure, errorString);
      }
      // destroy the Result<T, E>
      Result_ok_dpp_identity_identity_Identity_err_String_destroy(result);
    }
  }
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) *arg1, 0);
  }
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_getDocument(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (platform_value_types_identifier_Identifier *)platform_mobile_fetch_identity_get_document();
  *(platform_value_types_identifier_Identifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_org_dashj_platform_sdk_exampleJNI_fetchIdentity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2, jobject jarg3) {
  jobject jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  uint64_t arg2 ;
  uint64_t arg3 ;
  Result_ok_dpp_identity_identity_Identity_err_String *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg3) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg3);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg3, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg3 = 0;
    if (sz > 0) {
      arg3 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg3 = (arg3 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  result = (Result_ok_dpp_identity_identity_Identity_err_String *)platform_mobile_fetch_identity_fetch_identity(arg1,arg2,arg3);
  {
    if (!result) {
      jresult = NULL;
    } else {
      jclass resultClass = jenv->FindClass("org/dashj/platform/sdk/base/Result");
      
      if (result->ok != NULL) {
        jclass myClass = jenv->FindClass("org/dashj/platform/sdk/Identity");
        jmethodID constructor = jenv->GetMethodID(myClass, "<init>", "(JZ)V");
        void * clonedObject = platform_mobile_identity_Identity_clone(result->ok);
        jobject okObject = jenv->NewObject(myClass, constructor, (jlong) clonedObject, false);
        
        jmethodID midSuccess = jenv->GetStaticMethodID(resultClass, "Ok", "(Ljava/lang/Object;)Lorg/dashj/platform/sdk/base/Result;");
        jresult = jenv->CallStaticObjectMethod(resultClass, midSuccess, okObject);
      } else {
        jstring errorString = jenv->NewStringUTF(result->error);
        jmethodID midFailure = jenv->GetStaticMethodID(resultClass, "Err", "(Ljava/lang/Object;)Lorg/dashj/platform/sdk/base/Result;");
        jresult = jenv->CallStaticObjectMethod(resultClass, midFailure, errorString);
      }
      // destroy the Result<T, E>
      Result_ok_dpp_identity_identity_Identity_err_String_destroy(result);
    }
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformMobileFetchIdentityGetDocumentWithCallbacks(JNIEnv *jenv, jclass jcls, jobject jarg1, jobject jarg2) {
  jlong jresult = 0 ;
  uint64_t arg1 ;
  uint64_t arg2 ;
  platform_value_types_identifier_Identifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg1);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg1, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg1 = 0;
    if (sz > 0) {
      arg1 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg1 = (arg1 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  result = (platform_value_types_identifier_Identifier *)platform_mobile_fetch_identity_get_document_with_callbacks(arg1,arg2);
  *(platform_value_types_identifier_Identifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueHash256Ctor(JNIEnv *jenv, jclass jcls, jbyteArray jarg1) {
  jlong jresult = 0 ;
  uint8_t (*arg1)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray1 ;
  platform_value_Hash256 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return 0;
    }
    const jsize sz = jenv->GetArrayLength(jarg1);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg1, 0);
    if (!jarr) return 0;
    byteArray1 = (uint8_t *)memoryFactory.alloc(32); // this is a memory leak?
    memcpy(byteArray1, jarr, sz);
    
    //memcpy(arg1, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg1, jarr, JNI_ABORT);
    arg1 = (uint8_t (*) [32])byteArray1;
  }
  result = (platform_value_Hash256 *)platform_value_Hash256_ctor((unsigned char (*)[32])arg1);
  *(platform_value_Hash256 **)&jresult = result; 
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) *arg1, 0);
    
  }
  
  return jresult;
}


SWIGEXPORT jbyteArray JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueHash256Get0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  platform_value_Hash256 *arg1 = (platform_value_Hash256 *) 0 ;
  uint8_t (*result)[32] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_Hash256 **)&jarg1; 
  result = (uint8_t (*)[32])platform_value_Hash256_get_0((platform_value_Hash256 const *)arg1);
  {
    jresult = jenv->NewByteArray(32);
    jenv->SetByteArrayRegion(jresult, 0, 32, (jbyte *)(*result));
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueHash256Set0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  platform_value_Hash256 *arg1 = (platform_value_Hash256 *) 0 ;
  uint8_t (*arg2)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_Hash256 **)&jarg1; 
  {
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return ;
    }
    const jsize sz = jenv->GetArrayLength(jarg2);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg2, 0);
    if (!jarr) return ;
    byteArray2 = (uint8_t *)memoryFactory.alloc(32); // this is a memory leak?
    memcpy(byteArray2, jarr, sz);
    
    //memcpy(arg2, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg2, jarr, JNI_ABORT);
    arg2 = (uint8_t (*) [32])byteArray2;
  }
  platform_value_Hash256_set_0(arg1,(unsigned char (*)[32])arg2);
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) *arg2, 0);
    
  }
  
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueTypesIdentifierIdentifierBytes32Ctor(JNIEnv *jenv, jclass jcls, jbyteArray jarg1) {
  jlong jresult = 0 ;
  uint8_t (*arg1)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray1 ;
  platform_value_types_identifier_IdentifierBytes32 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return 0;
    }
    const jsize sz = jenv->GetArrayLength(jarg1);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg1, 0);
    if (!jarr) return 0;
    byteArray1 = (uint8_t *)memoryFactory.alloc(32); // this is a memory leak?
    memcpy(byteArray1, jarr, sz);
    
    //memcpy(arg1, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg1, jarr, JNI_ABORT);
    arg1 = (uint8_t (*) [32])byteArray1;
  }
  result = (platform_value_types_identifier_IdentifierBytes32 *)platform_value_types_identifier_IdentifierBytes32_ctor((unsigned char (*)[32])arg1);
  *(platform_value_types_identifier_IdentifierBytes32 **)&jresult = result; 
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg1, (jbyte *) *arg1, 0);
    
  }
  
  return jresult;
}


SWIGEXPORT jbyteArray JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueTypesIdentifierIdentifierBytes32Get0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  platform_value_types_identifier_IdentifierBytes32 *arg1 = (platform_value_types_identifier_IdentifierBytes32 *) 0 ;
  uint8_t (*result)[32] = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_IdentifierBytes32 **)&jarg1; 
  result = (uint8_t (*)[32])platform_value_types_identifier_IdentifierBytes32_get_0((platform_value_types_identifier_IdentifierBytes32 const *)arg1);
  {
    jresult = jenv->NewByteArray(32);
    jenv->SetByteArrayRegion(jresult, 0, 32, (jbyte *)(*result));
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueTypesIdentifierIdentifierBytes32Set0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  platform_value_types_identifier_IdentifierBytes32 *arg1 = (platform_value_types_identifier_IdentifierBytes32 *) 0 ;
  uint8_t (*arg2)[32] = (uint8_t (*)[32]) 0 ;
  uint8_t *byteArray2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_IdentifierBytes32 **)&jarg1; 
  {
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null array");
      return ;
    }
    const jsize sz = jenv->GetArrayLength(jarg2);
    jbyte* const jarr = jenv->GetByteArrayElements(jarg2, 0);
    if (!jarr) return ;
    byteArray2 = (uint8_t *)memoryFactory.alloc(32); // this is a memory leak?
    memcpy(byteArray2, jarr, sz);
    
    //memcpy(arg2, jarr, sz);
    jenv->ReleaseByteArrayElements(jarg2, jarr, JNI_ABORT);
    arg2 = (uint8_t (*) [32])byteArray2;
  }
  platform_value_types_identifier_IdentifierBytes32_set_0(arg1,(unsigned char (*)[32])arg2);
  {
    //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) *arg2, 0);
    
  }
  
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueTypesIdentifierIdentifierGet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  platform_value_types_identifier_IdentifierBytes32 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  result = (platform_value_types_identifier_IdentifierBytes32 *)platform_value_types_identifier_Identifier_get_0((platform_value_types_identifier_Identifier const *)arg1);
  *(platform_value_types_identifier_IdentifierBytes32 **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueTypesIdentifierIdentifierSet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  platform_value_types_identifier_IdentifierBytes32 *arg2 = (platform_value_types_identifier_IdentifierBytes32 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  arg2 = *(platform_value_types_identifier_IdentifierBytes32 **)&jarg2; 
  platform_value_types_identifier_Identifier_set_0(arg1,arg2);
}


SWIGEXPORT jbyteArray JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueTypesBinaryDataBinaryDataGet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyteArray jresult = 0 ;
  platform_value_types_binary_data_BinaryData *arg1 = (platform_value_types_binary_data_BinaryData *) 0 ;
  Vec_u8 *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_binary_data_BinaryData **)&jarg1; 
  result = (Vec_u8 *)platform_value_types_binary_data_BinaryData_get_0((platform_value_types_binary_data_BinaryData const *)arg1);
  {
    printf("typemap(out) Vec_u8* %lx\n", (long)result);
    if (!result) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vec_u8* null array");
      return 0;
    }
    if (!result->values) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Vec_u8.values null array");
      return 0;
    }
    printf("  (count: %ld, values: [%lx], %d)\n", result->count, (long)result->values, result->values[0]);
    jresult = jenv->NewByteArray(result->count);
    jenv->SetByteArrayRegion(jresult, 0, result->count, (jbyte *) result->values);
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_platformValueTypesBinaryDataBinaryDataSet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyteArray jarg2) {
  platform_value_types_binary_data_BinaryData *arg1 = (platform_value_types_binary_data_BinaryData *) 0 ;
  Vec_u8 *arg2 = (Vec_u8 *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_binary_data_BinaryData **)&jarg1; 
  
  uint8_t * _buffer_arg2 = (uint8_t*)(jenv)->GetByteArrayElements(jarg2, 0);
  int size_arg2 = (jenv)->GetArrayLength(jarg2);
  uint8_t * byteArray_arg2 = (uint8_t *)memoryFactory.alloc(size_arg2);
  memcpy(byteArray_arg2, _buffer_arg2, size_arg2);
  printf("typemap(in) Vec_u8 *: %ld, [%lx]%d\n", size_arg2, (long)_buffer_arg2, _buffer_arg2[0]);
  arg2 = Vec_u8_ctor(size_arg2, byteArray_arg2);
  //arg2 = Vec_u8_ctor((uintptr_t)byteArray_arg2, (uint8_t*)size_arg2); // problem with order of parameters
  printf("typemap(in) Vec_u8 *: %lx\n", arg2);
  printf("typemap(in) Vec_u8 *: count: %ld\n", arg2->count);
  printf("typemap(in) Vec_u8 *: count: %ld, values: [%lx]\n", arg2->count, (long)arg2->values);
  printf("typemap(in) Vec_u8 *: count: %ld, values: [%lx]%d\n", arg2->count, (long)arg2->values, arg2->values[0]);
  
  platform_value_types_binary_data_BinaryData_set_0(arg1,arg2);
  
  printf("typemap(argout) Vec_u8 *: %ld, [%lx]%d\n", arg2->count, (long)arg2->values, arg2->values[0]);
  //JCALL3(ReleaseByteArrayElements, jenv, jarg2, (jbyte *) _buffer_arg2, 0);
  jenv->ReleaseByteArrayElements(jarg2, (jbyte *) _buffer_arg2, 0);
  printf("typemap(argout) Vec_u8 *: %ld, [%lx]%d\n", arg2->count, (long)arg2->values, arg2->values[0]);
  
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityV0IdentityV0GetId(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  platform_value_types_identifier_Identifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (platform_value_types_identifier_Identifier *)dpp_identity_v0_IdentityV0_get_id((dpp_identity_v0_IdentityV0 const *)arg1);
  *(platform_value_types_identifier_Identifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityV0IdentityV0GetBalance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  uint64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (uint64_t)dpp_identity_v0_IdentityV0_get_balance((dpp_identity_v0_IdentityV0 const *)arg1);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityV0IdentityV0GetRevision(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  dpp_prelude_Revision *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  result = (dpp_prelude_Revision *)dpp_identity_v0_IdentityV0_get_revision((dpp_identity_v0_IdentityV0 const *)arg1);
  *(dpp_prelude_Revision **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityV0IdentityV0SetId(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  platform_value_types_identifier_Identifier *arg2 = (platform_value_types_identifier_Identifier *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  arg2 = *(platform_value_types_identifier_Identifier **)&jarg2; 
  dpp_identity_v0_IdentityV0_set_id(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityV0IdentityV0SetBalance(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  uint64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  dpp_identity_v0_IdentityV0_set_balance(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityV0IdentityV0SetRevision(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_v0_IdentityV0 *arg1 = (dpp_identity_v0_IdentityV0 *) 0 ;
  dpp_prelude_Revision *arg2 = (dpp_prelude_Revision *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_v0_IdentityV0 **)&jarg1; 
  arg2 = *(dpp_prelude_Revision **)&jarg2; 
  dpp_identity_v0_IdentityV0_set_revision(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyKeyCountGet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_KeyCount *arg1 = (dpp_identity_identity_public_key_KeyCount *) 0 ;
  dpp_identity_identity_public_key_KeyID *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_KeyCount **)&jarg1; 
  result = (dpp_identity_identity_public_key_KeyID *)dpp_identity_identity_public_key_KeyCount_get_0((dpp_identity_identity_public_key_KeyCount const *)arg1);
  *(dpp_identity_identity_public_key_KeyID **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyKeyCountSet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_KeyCount *arg1 = (dpp_identity_identity_public_key_KeyCount *) 0 ;
  dpp_identity_identity_public_key_KeyID *arg2 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_KeyCount **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_KeyID **)&jarg2; 
  dpp_identity_identity_public_key_KeyCount_set_0(arg1,arg2);
}


SWIGEXPORT jobject JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyTimestampMillisGet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  dpp_identity_identity_public_key_TimestampMillis *arg1 = (dpp_identity_identity_public_key_TimestampMillis *) 0 ;
  uint64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_TimestampMillis **)&jarg1; 
  result = (uint64_t)dpp_identity_identity_public_key_TimestampMillis_get_0((dpp_identity_identity_public_key_TimestampMillis const *)arg1);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyTimestampMillisSet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  dpp_identity_identity_public_key_TimestampMillis *arg1 = (dpp_identity_identity_public_key_TimestampMillis *) 0 ;
  uint64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_TimestampMillis **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  dpp_identity_identity_public_key_TimestampMillis_set_0(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyKeyIDGet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_KeyID *arg1 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  uint32_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_KeyID **)&jarg1; 
  result = (uint32_t)dpp_identity_identity_public_key_KeyID_get_0((dpp_identity_identity_public_key_KeyID const *)arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyKeyIDSet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dpp_identity_identity_public_key_KeyID *arg1 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  uint32_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_KeyID **)&jarg1; 
  arg2 = (uint32_t)jarg2; 
  dpp_identity_identity_public_key_KeyID_set_0(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0GetId(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_KeyID *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_KeyID *)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_get_id((dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 const *)arg1);
  *(dpp_identity_identity_public_key_KeyID **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0GetPurpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_purpose_Purpose *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_purpose_Purpose *)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_get_purpose((dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 const *)arg1);
  *(dpp_identity_identity_public_key_purpose_Purpose **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0GetSecurityLevel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_security_level_SecurityLevel *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_security_level_SecurityLevel *)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_get_security_level((dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 const *)arg1);
  *(dpp_identity_identity_public_key_security_level_SecurityLevel **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0GetContractBounds(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_get_contract_bounds((dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 const *)arg1);
  *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0GetKeyType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_key_type_KeyType *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_key_type_KeyType *)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_get_key_type((dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 const *)arg1);
  *(dpp_identity_identity_public_key_key_type_KeyType **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0GetReadOnly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (bool)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_get_read_only((dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 const *)arg1);
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0GetData(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  platform_value_types_binary_data_BinaryData *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (platform_value_types_binary_data_BinaryData *)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_get_data((dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 const *)arg1);
  *(platform_value_types_binary_data_BinaryData **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0GetDisabledAt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_TimestampMillis *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  result = (dpp_identity_identity_public_key_TimestampMillis *)dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_get_disabled_at((dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 const *)arg1);
  *(dpp_identity_identity_public_key_TimestampMillis **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0SetId(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_KeyID *arg2 = (dpp_identity_identity_public_key_KeyID *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_KeyID **)&jarg2; 
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_set_id(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0SetPurpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_purpose_Purpose *arg2 = (dpp_identity_identity_public_key_purpose_Purpose *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_purpose_Purpose **)&jarg2; 
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_set_purpose(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0SetSecurityLevel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_security_level_SecurityLevel *arg2 = (dpp_identity_identity_public_key_security_level_SecurityLevel *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_security_level_SecurityLevel **)&jarg2; 
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_set_security_level(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0SetContractBounds(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *arg2 = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jarg2; 
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_set_contract_bounds(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0SetKeyType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_key_type_KeyType *arg2 = (dpp_identity_identity_public_key_key_type_KeyType *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_key_type_KeyType **)&jarg2; 
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_set_key_type(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0SetReadOnly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jboolean jarg2) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  bool arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = jarg2 ? true : false; 
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_set_read_only(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0SetData(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  platform_value_types_binary_data_BinaryData *arg2 = (platform_value_types_binary_data_BinaryData *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(platform_value_types_binary_data_BinaryData **)&jarg2; 
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_set_data(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppIdentityIdentityPublicKeyV0IdentityPublicKeyV0SetDisabledAt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *arg1 = (dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 *) 0 ;
  dpp_identity_identity_public_key_TimestampMillis *arg2 = (dpp_identity_identity_public_key_TimestampMillis *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dpp_identity_identity_public_key_v0_IdentityPublicKeyV0 **)&jarg1; 
  arg2 = *(dpp_identity_identity_public_key_TimestampMillis **)&jarg2; 
  dpp_identity_identity_public_key_v0_IdentityPublicKeyV0_set_disabled_at(arg1,arg2);
}


SWIGEXPORT jobject JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppPreludeRevisionGet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  dpp_prelude_Revision *arg1 = (dpp_prelude_Revision *) 0 ;
  uint64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_prelude_Revision **)&jarg1; 
  result = (uint64_t)dpp_prelude_Revision_get_0((dpp_prelude_Revision const *)arg1);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_dppPreludeRevisionSet0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  dpp_prelude_Revision *arg1 = (dpp_prelude_Revision *) 0 ;
  uint64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dpp_prelude_Revision **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  dpp_prelude_Revision_set_0(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_MemoryFactory_1getInstance(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MemoryFactory *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MemoryFactory *)MemoryFactory::getInstance();
  *(MemoryFactory **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_new_1MemoryFactory(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MemoryFactory *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MemoryFactory *)new MemoryFactory();
  *(MemoryFactory **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_delete_1MemoryFactory(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  MemoryFactory *arg1 = (MemoryFactory *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(MemoryFactory **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_MemoryFactory_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  MemoryFactory *arg1 = (MemoryFactory *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MemoryFactory **)&jarg1; 
  result = (arg1)->size();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_MemoryFactory_1alloc_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  MemoryFactory *arg1 = (MemoryFactory *) 0 ;
  size_t arg2 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MemoryFactory **)&jarg1; 
  arg2 = (size_t)jarg2; 
  result = (void *)(arg1)->alloc(arg2);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_org_dashj_platform_sdk_exampleJNI_MemoryFactory_1clone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jstring jresult = 0 ;
  MemoryFactory *arg1 = (MemoryFactory *) 0 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MemoryFactory **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (char *)(arg1)->clone(arg2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_MemoryFactory_1alloc_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  MemoryFactory *arg1 = (MemoryFactory *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MemoryFactory **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (void *)(arg1)->alloc(arg2,arg3);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_MemoryFactory_1destroy_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  MemoryFactory *arg1 = (MemoryFactory *) 0 ;
  void *arg2 = (void *) 0 ;
  void *arg3 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MemoryFactory **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = *(void **)&jarg3; 
  (arg1)->destroy(arg2,arg3);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_MemoryFactory_1destroy_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  MemoryFactory *arg1 = (MemoryFactory *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MemoryFactory **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  (arg1)->destroy(arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_MemoryFactory_1destroyItem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  MemoryFactory *arg1 = (MemoryFactory *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MemoryFactory **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  (arg1)->destroyItem(arg2);
}


SWIGEXPORT void JNICALL Java_org_dashj_platform_sdk_exampleJNI_memoryFactory_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  MemoryFactory *arg1 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(MemoryFactory **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "MemoryFactory & reference is null");
    return ;
  } 
  memoryFactory = *arg1;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_memoryFactory_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  MemoryFactory *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (MemoryFactory *) &(MemoryFactory &)memoryFactory;
  *(MemoryFactory **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_identifierClone(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  platform_value_types_identifier_Identifier *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  result = (platform_value_types_identifier_Identifier *)Identifier_clone(arg1);
  *(platform_value_types_identifier_Identifier **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_singleContract(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  result = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *)singleContract(arg1);
  *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_org_dashj_platform_sdk_exampleJNI_singleContractDocument(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jlong jresult = 0 ;
  platform_value_types_identifier_Identifier *arg1 = (platform_value_types_identifier_Identifier *) 0 ;
  char *arg2 = (char *) 0 ;
  dpp_identity_identity_public_key_contract_bounds_ContractBounds *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(platform_value_types_identifier_Identifier **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (dpp_identity_identity_public_key_contract_bounds_ContractBounds *)singleContractDocument(arg1,arg2);
  *(dpp_identity_identity_public_key_contract_bounds_ContractBounds **)&jresult = result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


#ifdef __cplusplus
}
#endif

