plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22' // Use a compatible version
    id 'com.google.protobuf'
    id('io.gitlab.arturbosch.detekt').version("1.19.0")
}

group 'org.dashj.platform'
version 'unspecified'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':dash-sdk-java')
    implementation "org.dashj:dashj-core:$dashj_version"
    implementation 'org.json:json:20190722'
    implementation 'com.google.guava:guava:29.0-android'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7"
    implementation 'com.google.protobuf:protobuf-javalite:3.21.1'

    testImplementation 'org.slf4j:slf4j-jdk14:1.7.30'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation 'co.nstant.in:cbor:0.8'
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.4.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.11.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC1"
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.4.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.11.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC1"

    implementation 'io.grpc:grpc-okhttp:1.54.0' // CURRENT_GRPC_VERSION
    implementation('io.grpc:grpc-protobuf-lite:1.54.0') { // CURRENT_GRPC_VERSION
        exclude module: "protobuf-lite"
    }
    implementation 'io.grpc:grpc-stub:1.54.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-netty-shaded:1.54.0'  // replace with the latest version
    implementation 'io.netty:netty-tcnative-boringssl-static:2.0.46.Final'  // replace with the latest version
}

protobuf {
    protoc {
        if (osdetector.os == "osx") {
            artifact = 'com.google.protobuf:protoc:3.21.1:osx-x86_64'
        } else {
            artifact = 'com.google.protobuf:protoc:3.21.1'
        }
    }
    generateProtoTasks {
        all().configureEach { task ->
            task.builtins {
                remove java
                java { option 'lite' }
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += 'build/generated/source/proto/main/java'
        }
        kotlin {
            srcDirs += 'build/generated/source/proto/main/java'
        }
        proto {
            srcDirs += 'src/main/proto' // default value
        }
    }
}

test {
    useJUnitPlatform()
}

// apply from: 'ktlint.gradle'